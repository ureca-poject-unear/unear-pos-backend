name: Create Jira issue
on:
  issues:
    types:
      - opened

# 각 레포별 설정값 (레포마다 이 값들을 수정해주세요)
env:
  REPO_GUBUN: "백엔드"  # 각 레포의 구분값
  REPO_NAME: "pos"  # 각 레포의 repo 필드값

jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout main code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Issue Parser
        uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue-form.yml

      - name: Log Issue Parser
        run: |
          echo 'JSON String:'
          echo '${{ steps.issue-parser.outputs.jsonString }}'
          echo '---'
          echo 'Individual fields:'
          echo 'issueType: ${{ fromJson(steps.issue-parser.outputs.jsonString).issueparser_issueType }}'
          echo 'parentKey: ${{ fromJson(steps.issue-parser.outputs.jsonString).issueparser_parentKey }}'
          echo 'description: ${{ fromJson(steps.issue-parser.outputs.jsonString).issueparser_description }}'

      - name: Set parsed values
        id: parsed
        run: |
          echo "issueType=${{ fromJson(steps.issue-parser.outputs.jsonString).issueparser_issueType }}" >> $GITHUB_OUTPUT
          echo "parentKey=${{ fromJson(steps.issue-parser.outputs.jsonString).issueparser_parentKey }}" >> $GITHUB_OUTPUT
          echo "description=${{ fromJson(steps.issue-parser.outputs.jsonString).issueparser_description }}" >> $GITHUB_OUTPUT

      - name: Map issue type to Jira
        id: map-issue-type
        run: |
          case "${{ steps.parsed.outputs.issueType }}" in
            "버그") echo "jira_type=버그" >> $GITHUB_OUTPUT ;;
            "작업") echo "jira_type=작업" >> $GITHUB_OUTPUT ;;
            "스토리") echo "jira_type=스토리" >> $GITHUB_OUTPUT ;;
            *) echo "jira_type=작업" >> $GITHUB_OUTPUT ;;
          esac

      - name: Convert markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ${{ github.event.issue.body }}
          mode: md2jira

      - name: Check parent hierarchy
        id: check-hierarchy
        run: |
          ISSUE_TYPE="${{ steps.parsed.outputs.issueType }}"
          PARENT_KEY="${{ steps.parsed.outputs.parentKey }}"
          
          if [ "$PARENT_KEY" = "" ]; then
            echo "has_parent=false" >> $GITHUB_OUTPUT
            echo "can_link=false" >> $GITHUB_OUTPUT
            echo "reason=" >> $GITHUB_OUTPUT
          else
            echo "has_parent=true" >> $GITHUB_OUTPUT
            
            # 정확한 계층 구조 체크
            case "$ISSUE_TYPE" in
              "작업"|"버그"|"스토리")
                echo "can_link=true" >> $GITHUB_OUTPUT
                echo "reason=상위 항목은 에픽이어야 합니다" >> $GITHUB_OUTPUT
                ;;
              *)
                echo "can_link=false" >> $GITHUB_OUTPUT
                echo "reason=지원되지 않는 이슈 타입입니다" >> $GITHUB_OUTPUT
                ;;
            esac
          fi

      - name: Create Issue (with parent)
        if: ${{ steps.check-hierarchy.outputs.has_parent == 'true' && steps.check-hierarchy.outputs.can_link == 'true' }}
        id: create-with-parent
        uses: atlassian/gajira-create@v3
        with:
          project: WL7
          issuetype: ${{ steps.map-issue-type.outputs.jira_type }}
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output-text }}"
          fields: |
            {
              "parent": {
                "key": "${{ steps.parsed.outputs.parentKey }}"
              },
              "customfield_10041": { "value": "${{ env.REPO_GUBUN }}" },
              "customfield_10042": { "value": "${{ env.REPO_NAME }}" }
            }

      - name: Create Issue (no parent)
        if: ${{ steps.check-hierarchy.outputs.has_parent == 'false' || steps.check-hierarchy.outputs.can_link == 'false' }}
        id: create-no-parent
        uses: atlassian/gajira-create@v3
        with:
          project: WL7
          issuetype: ${{ steps.map-issue-type.outputs.jira_type }}
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output-text }}"
          fields: |
            {
              "customfield_10041": { "value": "${{ env.REPO_GUBUN }}" },
              "customfield_10042": { "value": "${{ env.REPO_NAME }}" }
            }

      - name: Add parent link comment (if specified)
        if: ${{ steps.parsed.outputs.parentKey != '' }}
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            ⚠️ **상위 항목 연결 실패**
            
            상위 항목 **${{ steps.parsed.outputs.parentKey }}**와의 연결에 실패했습니다.
            Jira에서 수동으로 연결해주세요.

      - name: Set issue output
        id: issue-output
        run: |
          echo "issue=${{ steps.create.outputs.issue }}" >> $GITHUB_OUTPUT

      - name: Log created issue
        run: echo "Jira Issue ${{ steps.issue-output.outputs.issue }} was created"

      - name: Update issue title
        uses: actions-cool/issues-helper@v3
        with:
          actions: "update-issue"
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "[${{ steps.issue-output.outputs.issue }}] ${{ github.event.issue.title }}"

      - name: Add comment with Jira issue link
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            ## 🎟️ Jira Issue Created
            
            **Issue:** [${{ steps.issue-output.outputs.issue }}](${{ secrets.JIRA_BASE_URL }}/browse/${{ steps.issue-output.outputs.issue }})
            **Type:** ${{ steps.map-issue-type.outputs.jira_type }}
            **구분:** ${{ env.REPO_GUBUN }}
            **Repo:** ${{ env.REPO_NAME }}
            ${{ steps.parsed.outputs.parentKey != '' && format('**Parent Issue:** {0}', steps.parsed.outputs.parentKey) || '' }}
