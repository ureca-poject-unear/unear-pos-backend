- name: Check parent hierarchy
        id: check-hierarchy
        run: |
          ISSUE_TYPE="${{ steps.parsed.outputs.issueType }}"
          PARENT_KEY="${{ steps.parsed.outputs.parentKey }}"
          
          if [ "$PARENT_KEY" =name: Create Jira issue
on:
  issues:
    types:
      - opened

# 각 레포별 설정값 (레포마다 이 값들을 수정해주세요)
env:
  REPO_GUBUN: "백엔드"  # 각 레포의 구분값
  REPO_NAME: "pos"  # 각 레포의 repo 필드값

jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout main code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Issue Parser
        uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue-form.yml

      - name: Log Issue Parser
        run: |
          echo 'JSON String:'
          echo '${{ steps.issue-parser.outputs.jsonString }}'
          echo '---'
          echo 'Individual fields:'
          echo 'issueType: ${{ fromJson(steps.issue-parser.outputs.jsonString).issueparser_issueType }}'
          echo 'parentKey: ${{ fromJson(steps.issue-parser.outputs.jsonString).issueparser_parentKey }}'
          echo 'description: ${{ fromJson(steps.issue-parser.outputs.jsonString).issueparser_description }}'

      - name: Set parsed values
        id: parsed
        run: |
          echo "issueType=${{ fromJson(steps.issue-parser.outputs.jsonString).issueparser_issueType }}" >> $GITHUB_OUTPUT
          echo "description=${{ fromJson(steps.issue-parser.outputs.jsonString).issueparser_description }}" >> $GITHUB_OUTPUT
          echo "tasks=${{ fromJson(steps.issue-parser.outputs.jsonString).issueparser_tasks }}" >> $GITHUB_OUTPUT
          
          # 상위 에픽 번호 처리 (숫자만 입력된 경우 WL7- 접두사 추가)
          PARENT_INPUT="${{ fromJson(steps.issue-parser.outputs.jsonString).issueparser_parentKey }}"
          if [ ! -z "$PARENT_INPUT" ]; then
            if [[ "$PARENT_INPUT" =~ ^[0-9]+$ ]]; then
              # 숫자만 입력된 경우
              PARENT_KEY="WL7-$PARENT_INPUT"
            elif [[ "$PARENT_INPUT" =~ ^WL7-[0-9]+$ ]]; then
              # 이미 WL7- 형태로 입력된 경우
              PARENT_KEY="$PARENT_INPUT"
            else
              # 잘못된 형태
              PARENT_KEY=""
            fi
          else
            PARENT_KEY=""
          fi
          
          echo "parentKey=$PARENT_KEY" >> $GITHUB_OUTPUT
          echo "Original input: $PARENT_INPUT"
          echo "Processed parentKey: $PARENT_KEY"

      - name: Map issue type to Jira
        id: map-issue-type
        run: |
          case "${{ steps.parsed.outputs.issueType }}" in
            "버그") echo "jira_type=버그" >> $GITHUB_OUTPUT ;;
            "작업") echo "jira_type=작업" >> $GITHUB_OUTPUT ;;
            "스토리") echo "jira_type=스토리" >> $GITHUB_OUTPUT ;;
            *) echo "jira_type=작업" >> $GITHUB_OUTPUT ;;
          esac

      - name: Convert markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ${{ github.event.issue.body }}
          mode: md2jira

      - name: Parse checklist tasks
        id: parse-tasks
        run: |
          TASKS="${{ steps.parsed.outputs.tasks }}"
          echo "Raw tasks:"
          echo "$TASKS"
          
          # 체크리스트에서 작업들 추출 (- [ ] 로 시작하는 라인들)
          TASK_LIST=$(echo "$TASKS" | grep -E "^- \[ \]" | sed 's/^- \[ \] //' | sed '/^$/d')
          
          echo "Parsed task list:"
          echo "$TASK_LIST"
          
          # 작업 개수 세기
          TASK_COUNT=$(echo "$TASK_LIST" | wc -l)
          if [ -z "$TASK_LIST" ] || [ "$TASK_LIST" = "" ]; then
            TASK_COUNT=0
          fi
          
          echo "task_count=$TASK_COUNT" >> $GITHUB_OUTPUT
          echo "task_list<<EOF" >> $GITHUB_OUTPUT
          echo "$TASK_LIST" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create main issue (with epic)
        if: ${{ steps.parsed.outputs.parentKey != '' }}
        id: create-main-with-epic
        uses: atlassian/gajira-create@v3
        with:
          project: WL7
          issuetype: ${{ steps.map-issue-type.outputs.jira_type }}
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output-text }}"
          fields: |
            {
              "parent": {
                "key": "${{ steps.parsed.outputs.parentKey }}"
              },
              "customfield_10041": { "value": "${{ env.REPO_GUBUN }}" },
              "customfield_10042": { "value": "${{ env.REPO_NAME }}" }
            }

      - name: Create main issue (no epic)
        if: ${{ steps.parsed.outputs.parentKey == '' }}
        id: create-main-no-epic
        uses: atlassian/gajira-create@v3
        with:
          project: WL7
          issuetype: ${{ steps.map-issue-type.outputs.jira_type }}
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output-text }}"
          fields: |
            {
              "customfield_10041": { "value": "${{ env.REPO_GUBUN }}" },
              "customfield_10042": { "value": "${{ env.REPO_NAME }}" }
            }

      - name: Set main issue output
        id: main-issue
        run: |
          if [ "${{ steps.create-main-with-epic.outputs.issue }}" != "" ]; then
            echo "issue=${{ steps.create-main-with-epic.outputs.issue }}" >> $GITHUB_OUTPUT
          else
            echo "issue=${{ steps.create-main-no-epic.outputs.issue }}" >> $GITHUB_OUTPUT
          fi

      - name: Create sub-tasks
        if: ${{ steps.parse-tasks.outputs.task_count > 0 }}
        id: create-subtasks
        run: |
          MAIN_ISSUE="${{ steps.main-issue.outputs.issue }}"
          TASK_LIST="${{ steps.parse-tasks.outputs.task_list }}"
          
          echo "Creating sub-tasks for main issue: $MAIN_ISSUE"
          
          # 각 작업을 하위 작업으로 생성
          COUNTER=1
          while IFS= read -r task; do
            if [ ! -z "$task" ]; then
              echo "Creating sub-task $COUNTER: $task"
              
              # 하위 작업 생성 (gajira-create 액션 직접 호출은 어려우므로 API 호출)
              curl -X POST \
                -H "Authorization: Basic $(echo -n '${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}' | base64)" \
                -H "Content-Type: application/json" \
                -d "{
                  \"fields\": {
                    \"project\": {\"key\": \"WL7\"},
                    \"issuetype\": {\"name\": \"하위 작업\"},
                    \"summary\": \"$task\",
                    \"parent\": {\"key\": \"$MAIN_ISSUE\"},
                    \"customfield_10041\": {\"value\": \"${{ env.REPO_GUBUN }}\"},
                    \"customfield_10042\": {\"value\": \"${{ env.REPO_NAME }}\"}
                  }
                }" \
                "${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue"
              
              COUNTER=$((COUNTER + 1))
            fi
          done <<< "$TASK_LIST"

      - name: Add parent link comment (if specified)
        if: ${{ steps.parsed.outputs.parentKey != '' }}
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            ⚠️ **상위 항목 연결 실패**
            
            상위 항목 **${{ steps.parsed.outputs.parentKey }}**와의 연결에 실패했습니다.
            Jira에서 수동으로 연결해주세요.

      - name: Set issue output
        id: issue-output
        run: |
          echo "issue=${{ steps.create.outputs.issue }}" >> $GITHUB_OUTPUT

      - name: Log created issue
        run: echo "Jira Issue ${{ steps.issue-output.outputs.issue }} was created"

      - name: Update issue title
        uses: actions-cool/issues-helper@v3
        with:
          actions: "update-issue"
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "[${{ steps.issue-output.outputs.issue }}] ${{ github.event.issue.title }}"

      - name: Add comment with Jira issue link
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            ## 🎟️ Jira Issue Created
            
            **Issue:** [${{ steps.issue-output.outputs.issue }}](${{ secrets.JIRA_BASE_URL }}/browse/${{ steps.issue-output.outputs.issue }})
            **Type:** ${{ steps.map-issue-type.outputs.jira_type }}
            **구분:** ${{ env.REPO_GUBUN }}
            **Repo:** ${{ env.REPO_NAME }}
            ${{ steps.parsed.outputs.parentKey != '' && format('**Parent Issue:** {0}', steps.parsed.outputs.parentKey) || '' }}
